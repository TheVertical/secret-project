// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SecretProject.DAL.Contexts;

namespace SecretProject.DAL.Migrations
{
    [DbContext(typeof(sBaseContext))]
    partial class sBaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("SecretProject.BusinessProject.Measurements.Measurement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<float>("Coefficient")
                        .HasColumnType("real");

                    b.Property<string>("InternationalName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Timestamp")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("ocCode")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Measurement");
                });

            modelBuilder.Entity("SecretProject.BusinessProject.Models.Manufacturer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("NomenclatureId")
                        .HasColumnType("int");

                    b.Property<byte[]>("Timestamp")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.HasIndex("NomenclatureId")
                        .IsUnique();

                    b.ToTable("Manufacturers");
                });

            modelBuilder.Entity("SecretProject.BusinessProject.Models.Nomeclature.Nomenclature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<float>("Cost")
                        .HasColumnType("real");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MeasurementId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("PromotionId")
                        .HasColumnType("int");

                    b.Property<byte[]>("Timestamp")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.HasIndex("MeasurementId");

                    b.HasIndex("PromotionId");

                    b.ToTable("Nomenclatures");
                });

            modelBuilder.Entity("SecretProject.BusinessProject.Models.Nomeclature.Promotion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("OfficialTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Timestamp")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("WorkTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Promotions");
                });

            modelBuilder.Entity("SecretProject.BusinessProject.Models.NomenclatureGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NomenclatureId")
                        .HasColumnType("int");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<byte[]>("Timestamp")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.HasIndex("NomenclatureId")
                        .IsUnique();

                    b.HasIndex("ParentId");

                    b.ToTable("NomenclatureGroups");
                });

            modelBuilder.Entity("SecretProject.BusinessProject.Models.NomenclatureProperty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NomenclatureId")
                        .HasColumnType("int");

                    b.Property<byte[]>("Timestamp")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("NomenclatureId");

                    b.ToTable("NomenclatureProperties");
                });

            modelBuilder.Entity("SecretProject.BusinessProject.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<byte[]>("Timestamp")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("SecretProject.BusinessProject.Models.User.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Login")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Salt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<byte[]>("Timestamp")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SecretProject.BusinessProject.Models.Manufacturer", b =>
                {
                    b.HasOne("SecretProject.BusinessProject.Models.Nomeclature.Nomenclature", "Nomenclature")
                        .WithOne("Manufacturer")
                        .HasForeignKey("SecretProject.BusinessProject.Models.Manufacturer", "NomenclatureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Nomenclature");
                });

            modelBuilder.Entity("SecretProject.BusinessProject.Models.Nomeclature.Nomenclature", b =>
                {
                    b.HasOne("SecretProject.BusinessProject.Measurements.Measurement", "Measurement")
                        .WithMany()
                        .HasForeignKey("MeasurementId");

                    b.HasOne("SecretProject.BusinessProject.Models.Nomeclature.Promotion", "Promotion")
                        .WithMany("DiscountedProducts")
                        .HasForeignKey("PromotionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Measurement");

                    b.Navigation("Promotion");
                });

            modelBuilder.Entity("SecretProject.BusinessProject.Models.NomenclatureGroup", b =>
                {
                    b.HasOne("SecretProject.BusinessProject.Models.Nomeclature.Nomenclature", "Nomenclature")
                        .WithOne("NomenclatureGroup")
                        .HasForeignKey("SecretProject.BusinessProject.Models.NomenclatureGroup", "NomenclatureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SecretProject.BusinessProject.Models.NomenclatureGroup", "Parent")
                        .WithMany("Childs")
                        .HasForeignKey("ParentId");

                    b.Navigation("Nomenclature");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("SecretProject.BusinessProject.Models.NomenclatureProperty", b =>
                {
                    b.HasOne("SecretProject.BusinessProject.Models.Nomeclature.Nomenclature", null)
                        .WithMany("Properties")
                        .HasForeignKey("NomenclatureId");
                });

            modelBuilder.Entity("SecretProject.BusinessProject.Models.Nomeclature.Nomenclature", b =>
                {
                    b.Navigation("Manufacturer");

                    b.Navigation("NomenclatureGroup");

                    b.Navigation("Properties");
                });

            modelBuilder.Entity("SecretProject.BusinessProject.Models.Nomeclature.Promotion", b =>
                {
                    b.Navigation("DiscountedProducts");
                });

            modelBuilder.Entity("SecretProject.BusinessProject.Models.NomenclatureGroup", b =>
                {
                    b.Navigation("Childs");
                });
#pragma warning restore 612, 618
        }
    }
}
